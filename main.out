\BOOKMARK [0][-]{chineseabstract.0}{中文摘要}{}% 1
\BOOKMARK [0][-]{englishabstract.0}{英文摘要}{}% 2
\BOOKMARK [0][-]{toc.0}{目录}{}% 3
\BOOKMARK [0][-]{chapter*.4}{图目录}{}% 4
\BOOKMARK [0][-]{chapter*.5}{表目录}{}% 5
\BOOKMARK [0][-]{chapter.1}{第一章 绪 论}{}% 6
\BOOKMARK [1][-]{section.1.1}{1.1 研究背景与意义}{chapter.1}% 7
\BOOKMARK [1][-]{section.1.2}{1.2 国内外研究现状}{chapter.1}% 8
\BOOKMARK [1][-]{section.1.3}{1.3 论文内容及结构安排}{chapter.1}% 9
\BOOKMARK [0][-]{chapter.2}{第二章 GPU硬件结构与CUDA编程模式}{}% 10
\BOOKMARK [1][-]{section.2.1}{2.1 CPU与GPU}{chapter.2}% 11
\BOOKMARK [2][-]{subsection.2.1.1}{2.1.1 CPU与GPU区别}{section.2.1}% 12
\BOOKMARK [2][-]{subsection.2.1.2}{2.1.2 CPU+GPU异构计算模型}{section.2.1}% 13
\BOOKMARK [1][-]{section.2.2}{2.2 GPU硬件架构}{chapter.2}% 14
\BOOKMARK [2][-]{subsection.2.2.1}{2.2.1 流处理器}{section.2.2}% 15
\BOOKMARK [2][-]{subsection.2.2.2}{2.2.2 线程束\(Wrap\)}{section.2.2}% 16
\BOOKMARK [2][-]{subsection.2.2.3}{2.2.3 存储结构}{section.2.2}% 17
\BOOKMARK [2][-]{subsection.2.2.4}{2.2.4 流多处理器细节}{section.2.2}% 18
\BOOKMARK [2][-]{subsection.2.2.5}{2.2.5 执行模型}{section.2.2}% 19
\BOOKMARK [1][-]{section.2.3}{2.3 CUDA编程模式}{chapter.2}% 20
\BOOKMARK [2][-]{subsection.2.3.1}{2.3.1 CUD软件线程组织}{section.2.3}% 21
\BOOKMARK [2][-]{subsection.2.3.2}{2.3.2 kernel函数}{section.2.3}% 22
\BOOKMARK [2][-]{subsection.2.3.3}{2.3.3 CUDA线程同步}{section.2.3}% 23
\BOOKMARK [2][-]{subsection.2.3.4}{2.3.4 CUDA流并行}{section.2.3}% 24
\BOOKMARK [2][-]{subsection.2.3.5}{2.3.5 本章总结}{section.2.3}% 25
\BOOKMARK [0][-]{chapter.3}{第三章 SDN网络下的并行路由优化算法设计}{}% 26
\BOOKMARK [1][-]{section.3.1}{3.1 引言}{chapter.3}% 27
\BOOKMARK [1][-]{section.3.2}{3.2 网络模型和问题建模}{chapter.3}% 28
\BOOKMARK [2][-]{subsection.3.2.1}{3.2.1 网络模型}{section.3.2}% 29
\BOOKMARK [2][-]{subsection.3.2.2}{3.2.2 问题建模}{section.3.2}% 30
\BOOKMARK [1][-]{section.3.3}{3.3 基于遗传算法的路由优化算法}{chapter.3}% 31
\BOOKMARK [2][-]{subsection.3.3.1}{3.3.1 备选路模型}{section.3.3}% 32
\BOOKMARK [2][-]{subsection.3.3.2}{3.3.2 遗传算法设计}{section.3.3}% 33
\BOOKMARK [3][-]{subsubsection.3.3.2.1}{3.3.2.1 染色体结构}{subsection.3.3.2}% 34
\BOOKMARK [3][-]{subsubsection.3.3.2.2}{3.3.2.2 初始可行解的生成}{subsection.3.3.2}% 35
\BOOKMARK [3][-]{subsubsection.3.3.2.3}{3.3.2.3 评价}{subsection.3.3.2}% 36
\BOOKMARK [3][-]{subsubsection.3.3.2.4}{3.3.2.4 交叉}{subsection.3.3.2}% 37
\BOOKMARK [3][-]{subsubsection.3.3.2.5}{3.3.2.5 变异}{subsection.3.3.2}% 38
\BOOKMARK [3][-]{subsubsection.3.3.2.6}{3.3.2.6 终止条件}{subsection.3.3.2}% 39
\BOOKMARK [2][-]{subsection.3.3.3}{3.3.3 基于GPU的并行遗传算法设计}{section.3.3}% 40
\BOOKMARK [3][-]{subsubsection.3.3.3.1}{3.3.3.1 并行评价算法设计}{subsection.3.3.3}% 41
\BOOKMARK [3][-]{subsubsection.3.3.3.2}{3.3.3.2 并行排序，变异与交叉}{subsection.3.3.3}% 42
\BOOKMARK [1][-]{section.3.4}{3.4 基于拉格朗日的优化算法设计}{chapter.3}% 43
\BOOKMARK [2][-]{subsection.3.4.1}{3.4.1 基于拉格朗日松弛的模型}{section.3.4}% 44
\BOOKMARK [2][-]{subsection.3.4.2}{3.4.2 基于GPU的并行路由计算}{section.3.4}% 45
\BOOKMARK [2][-]{subsection.3.4.3}{3.4.3 链路权重更新}{section.3.4}% 46
\BOOKMARK [3][-]{subsubsection.3.4.3.1}{3.4.3.1 权重更新步长}{subsection.3.4.3}% 47
\BOOKMARK [3][-]{subsubsection.3.4.3.2}{3.4.3.2 随机更新策略}{subsection.3.4.3}% 48
\BOOKMARK [2][-]{subsection.3.4.4}{3.4.4 路径调整}{section.3.4}% 49
\BOOKMARK [2][-]{subsection.3.4.5}{3.4.5 仿真实验分析}{section.3.4}% 50
\BOOKMARK [3][-]{subsubsection.3.4.5.1}{3.4.5.1 仿真介绍}{subsection.3.4.5}% 51
\BOOKMARK [3][-]{subsubsection.3.4.5.2}{3.4.5.2 目标函数比较}{subsection.3.4.5}% 52
\BOOKMARK [3][-]{subsubsection.3.4.5.3}{3.4.5.3 算法时间比较}{subsection.3.4.5}% 53
\BOOKMARK [3][-]{subsubsection.3.4.5.4}{3.4.5.4 算法收敛性}{subsection.3.4.5}% 54
\BOOKMARK [1][-]{section.3.5}{3.5 本章总结}{chapter.3}% 55
\BOOKMARK [0][-]{chapter.4}{第四章 分层光网络下的并行路由优化算法研究}{}% 56
\BOOKMARK [1][-]{section.4.1}{4.1 引言}{chapter.4}% 57
\BOOKMARK [1][-]{section.4.2}{4.2 问题描述}{chapter.4}% 58
\BOOKMARK [2][-]{subsection.4.2.1}{4.2.1 EON中动态RSA问题}{section.4.2}% 59
\BOOKMARK [2][-]{subsection.4.2.2}{4.2.2 分层网络模型}{section.4.2}% 60
\BOOKMARK [1][-]{section.4.3}{4.3 分层图模型下的业务量工程算法}{chapter.4}% 61
\BOOKMARK [1][-]{section.4.4}{4.4 无权图情况下的GPU算法设计}{chapter.4}% 62
\BOOKMARK [2][-]{subsection.4.4.1}{4.4.1 相同速率业务的并行}{section.4.4}% 63
\BOOKMARK [2][-]{subsection.4.4.2}{4.4.2 不同速率间业务的并行}{section.4.4}% 64
\BOOKMARK [2][-]{subsection.4.4.3}{4.4.3 GPU上的kernel设计}{section.4.4}% 65
\BOOKMARK [1][-]{section.4.5}{4.5 带权图情况下的GPU算法设计}{chapter.4}% 66
\BOOKMARK [2][-]{subsection.4.5.1}{4.5.1 带跳数限制的最短路算法}{section.4.5}% 67
\BOOKMARK [2][-]{subsection.4.5.2}{4.5.2 相同速率业务的动态规划算法并行}{section.4.5}% 68
\BOOKMARK [2][-]{subsection.4.5.3}{4.5.3 不同速率间业务的并行}{section.4.5}% 69
\BOOKMARK [2][-]{subsection.4.5.4}{4.5.4 GPU上的kernel设计}{section.4.5}% 70
\BOOKMARK [1][-]{section.4.6}{4.6 实验仿真分析}{chapter.4}% 71
\BOOKMARK [2][-]{subsection.4.6.1}{4.6.1 对比算法}{section.4.6}% 72
\BOOKMARK [2][-]{subsection.4.6.2}{4.6.2 实验设置}{section.4.6}% 73
\BOOKMARK [2][-]{subsection.4.6.3}{4.6.3 无权图下的仿真结果}{section.4.6}% 74
\BOOKMARK [3][-]{subsubsection.4.6.3.1}{4.6.3.1 路径跳数优化结果分析}{subsection.4.6.3}% 75
\BOOKMARK [3][-]{subsubsection.4.6.3.2}{4.6.3.2 时间分析}{subsection.4.6.3}% 76
\BOOKMARK [3][-]{subsubsection.4.6.3.3}{4.6.3.3 阻塞率分析}{subsection.4.6.3}% 77
\BOOKMARK [2][-]{subsection.4.6.4}{4.6.4 带权图下的仿真结果}{section.4.6}% 78
\BOOKMARK [3][-]{subsubsection.4.6.4.1}{4.6.4.1 路径代价优化结果分析}{subsection.4.6.4}% 79
\BOOKMARK [3][-]{subsubsection.4.6.4.2}{4.6.4.2 时间分析}{subsection.4.6.4}% 80
\BOOKMARK [2][-]{subsection.4.6.5}{4.6.5 阻塞率分析}{section.4.6}% 81
\BOOKMARK [1][-]{section.4.7}{4.7 本章总结}{chapter.4}% 82
\BOOKMARK [0][-]{chapter.5}{第五章 全文总结与展望}{}% 83
\BOOKMARK [1][-]{section.5.1}{5.1 全文总结}{chapter.5}% 84
\BOOKMARK [1][-]{section.5.2}{5.2 后续工作展望}{chapter.5}% 85
\BOOKMARK [0][-]{chapter*.79}{致 谢}{}% 86
\BOOKMARK [0][-]{chapter*.80}{参考文献}{}% 87
